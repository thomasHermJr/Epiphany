package org.epiphany.Enums.Systems.Generation;

public enum EGenerationNames {

    /*TODO:
    *      Add generation method*/

    /*First Names*/

    /*Masc*/

    AARON("First", "Masculine", "Aaron"),
    ADAM("First","Masculine", "Adam"),
    ALEXANDER("First","Masculine", "Alexander"),
    DRUST("First","Masculine", "Drust"),
    ETHAN("First","Masculine", "Ethan"),
    JAMES("First","Masculine", "James"),
    JOHN("First","Masculine", "John"),
    DANZYG("First","Masculine", "Danzyg"),
    DRUSYC("First","Masculine", "Drusyć"),
    KACPER("First","Masculine", "Kacper"),
    KAMIL("First","Masculine", "Kamil"),
    KRZYSZTOF("First","Masculine", "Krzysztof"),
    LUKASZ("First","Masculine", "Łukasz"),
    MATEUSZ("First","Masculine", "Mateusz"),
    MICHAEL("First","Masculine", "Michael"),
    MICHAŁ("First","Masculine", "Michał"),
    NATHAN("First","Masculine", "Nathan"),
    NOAH("First","Masculine", "Noah"),
    OLIVER("First","Masculine", "Oliver"),
    TIDUS("First","Masculine", "Tidus"),
    AURON("First","Masculine", "Auron"),
    ORON("First","Masculine", "Oron"),
    XION("First","Masculine", "Xion"),
    ZACK("First","Masculine", "Zack"),
    ZIDANE("First","Masculine", "Zidane"),
    ZACKARY("First","Masculine", "Zackary"),
    ZACHARY("First","Masculine", "Zachary"),
    ZACHARIAH("First","Masculine", "Zachariah"),
    ZACH("First","Masculine", "Zach"),

    /*Ambi*/

    ALEX("First","Ambiguous", "Alex"),
    CASS("First","Ambiguous", "Cass"),
    KIM("First","Ambiguous", "Kim"),
    LEX("First","Ambiguous", "Lex"),
    RYDER("First","Ambiguous", "Ryder"),
    TAYLOR("First","Ambiguous", "Taylor"),
    JORDAN("First","Ambiguous", "Jordan"),
    CASEY("First","Ambiguous", "Casey"),
    RILEY("First","Ambiguous", "Riley"),
    SKYLER("First","Ambiguous", "Skyler"),
    FINLEY("First","Ambiguous", "Finley"),
    QUINN("First","Ambiguous", "Quinn"),
    AVERY("First","Ambiguous", "Avery"),
    REESE("First","Ambiguous", "Reese"),
    PAYTON("First","Ambiguous", "Payton"),
    ELLIS("First","Ambiguous", "Ellis"),
    HUNTER("First","Ambiguous", "Hunter"),
    ROWAN("First","Ambiguous", "Rowan"),
    SAGE("First","Ambiguous", "Sage"),
    TATUM("First","Ambiguous", "Tatum"),
    KRYS("First","Ambiguous", "Krys"),
    REN("First","Ambiguous", "Ren"),
    SORREN("First","Ambiguous", "Sorren"),
    LOREN("First","Ambiguous", "Loren"),
    RIN("First","Ambiguous", "Rin"),
    RION("First","Ambiguous", "Rion"),
    KAI("First","Ambiguous", "Kai"),
    KAY("First","Ambiguous", "Kay"),
    OLI("First","Ambiguous", "Oli"),
    OLLIE("First","Ambiguous", "Ollie"),
    DANI("First","Ambiguous", "Dani"),
    DANNY("First","Ambiguous", "Danny"),
    ZAK("First","Ambiguous", "Zak"),

    /*Fem*/

    AMELIA("First","Feminine", "Amelia"),
    AURORA("First","Feminine", "Aurora"),
    AVA("First","Feminine", "Ava"),
    CHARLOTTE("First","Feminine", "Charlotte"),
    EMMA("First","Feminine", "Emma"),
    ISABELLA("First","Feminine", "Isabella"),
    OLIVIA("First","Feminine", "Olivia"),
    SOPHIA("First","Feminine", "Sophia"),
    ZOE("First","Feminine", "Zoe"),
    DRUSILLA("First","Feminine", "Drusilla"),
    DRUSYLA("First","Feminine", "Drusyła"),
    KATARZYNA("First","Feminine", "Katarzyna"),
    MARIA("First","Feminine", "Maria"),
    NATALIA("First","Feminine", "Natalia"),
    NIKOLA("First","Feminine", "Nikola"),
    RACHEL("First","Feminine", "Rachel"),
    SERENA("First","Feminine", "Serena"),
    TATYANA("First","Feminine", "Tatyana"),
    YVONNE("First","Feminine", "Yvonne"),
    YVETTE("First","Feminine", "Yvette"),
    YVETTA("First","Feminine", "Yvetta"),
    RENA("First","Feminine", "Rena"),
    LENA("First","Feminine", "Lena"),
    LUNA("First","Feminine", "Luna"),
    ARIA("First","Feminine", "Aria"),
    LYRA("First","Feminine", "Lyra"),
    MIA("First","Feminine", "Mia"),
    LILIA("First","Feminine", "Lilia"),
    LILYA("First","Feminine", "Lilya"),
    TIFFANY("First","Feminine", "Tiffany"),
    BRENDA("First","Feminine", "Brenda"),

    /*Last Names*/

    /*All ambi*/

    // All last names are drawn from the same pool; may not be necessary to extend pG Value
    STORM("Last","Ambi", "Storm"),
    SHADOW("Last","Ambi", "Shadow"),
    RAIN("Last","Ambi", "Rain"),
    NIGHT("Last","Ambi", "Night"),
    DAWN("Last","Ambi", "Dawn"),
    SKY("Last","Ambi", "Sky"),
    MOON("Last","Ambi", "Moon"),
    STAR("Last","Ambi", "Star"),
    FROST("Last","Ambi", "Frost"),
    FLAME("Last","Ambi", "Flame"),
    WOLF("Last","Ambi", "Wolf"),
    FOX("Last","Ambi", "Fox"),
    HAWK("Last","Ambi", "Hawk"),
    LION("Last","Ambi", "Lion"),
    BEAR("Last","Ambi", "Bear"),
    DRAGON("Last","Ambi", "Dragon"),
    TIGER("Last","Ambi", "Tiger"),
    PHOENIX("Last","Ambi", "Phoenix"),
    COBRA("Last","Ambi", "Cobra"),
    VIPER("Last","Ambi", "Viper"),
    EAGLE("Last","Ambi", "Eagle"),
    RANGER("Last","Ambi", "Ranger"),
    WARDEN("Last","Ambi", "Warden"),
    BLADE("Last","Ambi", "Blade"),
    SHIELD("Last","Ambi", "Shield"),
    ARROW("Last","Ambi", "Arrow"),
    BOW("Last","Ambi", "Bow"),
    SPEAR("Last","Ambi", "Spear"),
    AXE("Last","Ambi", "Axe"),
    HAMMER("Last","Ambi", "Hammer"),
    SWORD("Last","Ambi", "Sword"),
    DANE("Last","Ambi", "Dane"),
    STARK("Last","Ambi", "Stark"),
    VALE("Last","Ambi", "Vale"),
    REED("Last","Ambi", "Reed"),
    SNOW("Last","Ambi", "Snow"),
    DANSI("Last","Ambi", "Dansi"),
    DANSY("Last","Ambi", "Dansy"),
    KOWALSKI("Last","Ambi", "Kowalski"),
    NOWAK("Last","Ambi", "Nowak"),
    HERMES("Last","Ambi", "Hermes"),
    ATHENA("Last","Ambi", "Athena"),
    ZEUS("Last","Ambi", "Zeus"),
    HERM("Last","Ambi", "Herm"),
    ATHEN("Last","Ambi", "Athen"),
    ZEU("Last","Ambi", "Zeu"),
    TITAN("Last","Ambi", "Titan"),
    CAESAR("Last","Ambi", "Caesar"),
    AUGUSTUS("Last","Ambi", "Augustus"),
    BRUTUS("Last","Ambi", "Brutus"),
    BUI("Last","Ambi", "Bui"),
    NGUYEN("Last","Ambi", "Nguyen"),
    TRAN("Last","Ambi", "Tran"),
    LE("Last","Ambi", "Le"),
    PHAM("Last","Ambi", "Pham"),
    HOANG("Last","Ambi", "Hoang"),
    HUYNH("Last","Ambi", "Huynh"),
    PHUONG("Last","Ambi", "Phoung"),
    DANG("Last","Ambi", "Dang"),
    DO("Last","Ambi", "Do"),
    LUCIEN("Last","Ambi", "Lucien"),
    MARCEL("Last","Ambi", "Marcel"),
    RENARD("Last","Ambi", "Renard"),
    BEAUX("Last","Ambi", "Beaux"),
    LEMAIRE("Last","Ambi", "Lemaire"),
    MOREAU("Last","Ambi", "Moreau"),
    DUBOIS("Last","Ambi", "Dubois"),
    LEBLANC("Last","Ambi", "Leblanc"),
    FAURE("Last","Ambi", "Faure"),
    RENAUD("Last","Ambi", "Renaud"),
    GIRARD("Last","Ambi", "Girard"),
    BONN("Last","Ambi", "Bonn"),
    LYNCH("Last","Ambi", "Lynch"),
    OCONNOR("Last","Ambi", "O'Connor"),
    MURPHY("Last","Ambi", "Murphy"),
    KELLY("Last","Ambi", "Kelly"),
    SULLIVAN("Last","Ambi", "Sullivan"),
    REILLY("Last","Ambi", "Reilly"),
    WALSH("Last","Ambi", "Walsh"),
    RYAN("Last","Ambi", "Ryan"),
    GALLAGHER("Last","Ambi", "Gallagher"),
    DOHERTY("Last","Ambi", "Doherty"),
    MCGEE("Last","Ambi", "McGee"),
    MCKENNA("Last","Ambi", "McKenna"),
    OSHEA("Last","Ambi", "O\'Shea"),
    ONEILL("Last","Ambi", "O\'Neill"),
    FLORES("Last","Ambi", "Flores"),
    RIVERA("Last","Ambi", "Rivera"),
    GARCIA("Last","Ambi", "Garcia"),
    MARTINEZ("Last","Ambi", "Martinez"),
    RODRIGUEZ("Last","Ambi", "Rodriguez"),
    HERNANDEZ("Last","Ambi", "Hernandez"),
    GOMEZ("Last","Ambi", "Gomez"),
    GAMEZ("Last","Ambi", "Gamez"),
    LOPEZ("Last","Ambi", "Lopez"),
    GONZALEZ("Last","Ambi", "Gonzalez"),
    PEREZ("Last","Ambi", "Perez"),
    SANCHEZ("Last","Ambi", "Sanchez"),
    RAMIREZ("Last","Ambi", "Ramirez"),
    TORRES("Last","Ambi", "Torres"),
    RUIZ("Last","Ambi", "Ruiz"),
    CHISMORE("Last","Ambi", "Chismore"),
    CHISMOR("Last","Ambi", "Chismor"),
    CHISMARE("Last","Ambi", "Chismare"),
    DANSZ("Last","Ambi", "Dansz"),
    DANSZC("Last","Ambi", "Danszc"),
    DANSZYC("Last","Ambi", "Danszyc"),
    DANSZYK("Last","Ambi", "Danszyk"),
    DANSKY("Last","Ambi", "Dansky"),
    DANSKI("Last","Ambi", "Danski"),
    DANSKYI("Last","Ambi", "Danskyi"),
    DANSZIK("Last","Ambi", "Danszik"),
    ZAYN("Last","Ambi", "Zayn"),
    MALIK("Last","Ambi", "Malik"),
    HODGDON("Last","Ambi", "Hodgdon"),
    MERRICK("Last","Ambi", "Merrick"),
    QUINNELL("Last","Ambi", "Quinnell"),
    QUINNEL("Last","Ambi", "Quinnel"),
    QUINNLE("Last","Ambi", "Quinnle"),
    OAKEN("Last","Ambi", "Oaken"),
    OAKENFOLD("Last","Ambi", "Oakenfold"),
    OAKENFOLDS("Last","Ambi", "Oakenfolds"),
    OAKENFOLDE("Last","Ambi", "Oakenfolde"),
    OAKENFIELD("Last","Ambi", "Oakenfield"),
    OAKENFIELDS("Last","Ambi", "Oakenfields"),
    RANS("Last","Ambi", "Rans"),
    HEI("Last","Ambi", "Hei"),
    HAI("Last","Ambi", "Hai"),
    HUI("Last","Ambi", "Hui"),
    MAI("Last","Ambi", "Mai");

    private final String nameSpace;
    private final String presentingGender;
    private final String name;

    EGenerationNames(String nameSpace, String presentingGender, String name) {
        this.nameSpace = nameSpace;
        this.presentingGender = presentingGender;
        this.name = name;
    } // end constructor

    /* Getters */

    public String getNameSpace() {
        return nameSpace;
    }

    public String getPresentingGender() {
        return presentingGender;
    }

    public String getName() {
        return name;
    }

} // end enum EGenerationNames
